@page "/event/{id:int}"
@inject IEventService EventService

@if (ev == null)
{
    <span>@message</span>
}
else {
    <div class="container mt-4">

        <div class="media-img-wrapper mr-2">
            @if (!string.IsNullOrEmpty(ev.ImageUrl))
            {
                <img class="media-img" src="@ev.ImageUrl" alt="@ev.Title" />
            }
            else
            {
                <MudCarousel Class="mud-width-full" ItemsSource="@ev.Images" Style="height: 200px;">
                    <ItemTemplate>
                        <MudImage Src="@context.Data"></MudImage>
                    </ItemTemplate>
                </MudCarousel>
            }
        </div>

        @*<img class="rounded mx-auto d-block img-fluid mb-5" style="max-height:450px" src="@ev.ImageUrl" alt="@ev.Title" />*@

        <h1 class="mb-2">@ev.Title</h1>

        <p class="mb-3">@ev.Description</p>

        <p><strong>Data: </strong>@ev.Date.ToLongDateString()</p>
        
        <p><strong>City: @ev.City</strong></p>
        <p><strong>Street: @ev.Street</strong></p>

        <p><strong>Cena: </strong>@ev.Price zł</p>
    </div>
}

@code {
    private Event? ev = null;
    private string message = string.Empty;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        var result = await EventService.GetEvent(Id);        
 
        message = "Loading product...";

        if (!result.Success)
        {
            message = result.Message;
        }
        else
        {
            ev = result.Data;
        }
    }
}