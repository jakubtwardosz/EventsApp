@page "/edit/categories"
@inject ICategoryService CategoryService
@implements IDisposable

<h3>Categories</h3>

    <div class="row mb-3">
        <div class="col">Name</div>
        <div class="col">Url</div>
        <div class="col"></div>
    </div>

    @foreach (var category in CategoryService.Categories)
    {
        @if (category.Editing)
        {
            <EditForm Model="editingCategory" OnSubmit="UpdateCategory">
                <div class="row mb-3">
                    <div class="col">
                        <InputText @bind-Value="editingCategory.Name" class="form-control"></InputText>
                    </div>
                    <div class="col">
                        <InputText @bind-Value="editingCategory.Url" class="form-control"></InputText>
                    </div>
                    <div class="col">
                        <button type="submit" class="btn btn-primary">
                            <i class="oi oi-cloud-upload"></i>
                        </button>
                        <button class="btn btn-primary" @onclick="CancelEditing">
                            <i class="oi oi-circle-x"></i>
                        </button>
                    </div>
                </div>
            </EditForm>
        }
        else
        {
            <div class="row mb-3">
                <div class="col">
                    @category.Name
                </div>
                <div class="col">
                    @category.Url
                </div>
                <div class="col">
                    <button class="btn btn-primary" @onclick="(() => EditCategory(category))">
                        <i class="oi oi-pencil"></i>
                    </button>
                    <button class="btn btn-primary" @onclick="(() => DeleteCategory(category.Id))">
                        <i class="oi oi-trash"></i>
                    </button>
                </div>
            </div>
        }
    }

    <button class="btn btn-primary" @onclick="CreateNewCategory">
        <i class="oi oi-plus"></i> Add new category
    </button>

@code {
    Category editingCategory = null;

    protected override async Task OnInitializedAsync()
    {
        await CategoryService.GetCategories();
        CategoryService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        CategoryService.OnChange -= StateHasChanged;
    }

    private void CreateNewCategory()
    {
        editingCategory = CategoryService.CreateNewCategory();
    }

    private void EditCategory(Category category)
    {
        category.Editing = true;
        editingCategory = category;
    }

    private async Task UpdateCategory()
    {
        if (editingCategory.IsNew)
            await CategoryService.AddCategory(editingCategory);
        else
            await CategoryService.UpdateCategory(editingCategory);
        editingCategory = new Category();
    }

    private async Task CancelEditing()
    {
        editingCategory = new Category();
        await CategoryService.GetCategories();
    }

    private async Task DeleteCategory(int id)
    {
        await CategoryService.DeleteCategory(id);
    }
}
