@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider
@using System.Security.Claims

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">EventsApp</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
            <AuthorizeView>
                <Authorized>
                    <NavLink class="nav-link" @onclick="Logout" Match="NavLinkMatch.All">
                        <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
                    </NavLink>
                    <NavLink class="nav-link" href="edit/events" Match="NavLinkMatch.All">
                        <span class="oi oi-document" aria-hidden="true"></span> Edit events
                    </NavLink>
                    <NavLink class="nav-link" href="edit/categories" Match="NavLinkMatch.All">
                        <span class="oi oi-document" aria-hidden="true"></span> Edit categories
                    </NavLink>
                    @if (authorized)
                    {
                        <NavLink class="nav-link" href="admin/secret" Match="NavLinkMatch.All">
                            <span class="oi oi-key" aria-hidden="true"></span> Secret Admin Page!
                        </NavLink>
                    }
                </Authorized>
                <NotAuthorized>
                    <NavLink class="nav-link" href="login" Match="NavLinkMatch.All">
                        <span class="oi oi-account-login" aria-hidden="true"></span> Login
                    </NavLink>
                    <NavLink class="nav-link" href="register" Match="NavLinkMatch.All">
                        <span class="oi oi-pencil" aria-hidden="true"></span> Register
                    </NavLink>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    bool authorized = false;

    protected override async Task OnInitializedAsync()
    {
        string role = (await AuthStateProvider.GetAuthenticationStateAsync())
            .User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role).Value;
        if (role.Contains("Admin"))
        {
            authorized = true;
        }
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task Logout()
    {
        await LocalStorage.RemoveItemAsync("authToken");
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        NavigationManager.NavigateTo("");
    }

}
